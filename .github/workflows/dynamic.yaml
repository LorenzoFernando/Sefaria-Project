# Deploys a test stack and runs tests against that
# Selenium
# pytest

# only build on commits by team members

# https://github.com/GoogleCloudPlatform/github-actions/blob/master/example-workflows/cloud-run/.github/workflows/cloud-run.yml

# https://github.com/GoogleCloudPlatform/github-actions/blob/master/get-secretmanager-secrets/README.md

# Todo:
  # 1. Create service account
  # 2. Add secrets to Github

# Todo:
  # short-circuit for bypassing tests
    # typically done with commit message
    # eg: /noci

---
name: Dynamic Tests
on:
  - push
  - pull_request

jobs:
  sandbox-deploy:
    runs-on: ubuntu-latest

    steps:
      # Deploy branch to cauldron
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with: 
          python-version: '3.7'

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DEV_CLOUDBUILD_SA_KEY }}
          project_id: ${{ secrets.DEV_PROJECT }}

      # I need to pass GITHUB_SHA into this
      - name: Submit Build Job to Cloud Build
        # This should use the 'arbitrary commit' build script
        # should these sandboxes be available to the public? probably not -- don't give them public IP addresses
        run: ./build/ci/create-ci-sandbox.bash
        env:
          GIT_COMMIT: "$GITHUB_SHA"
          GKE_CLUSTER: "${{secrets.DEV_GKE_CLUSTER}}"
          GKE_NAMESPACE: "${{secrets.DEV_SANDBOX_NAMESPACE}}"
          GKE_REGION: "${{secrets.DEV_GKE_REGION}}"
          MONGO_HOST: "${{secrets.DEV_MONGO_HOST}}"
          POSTGRES_HOST: "${{secrets.DEV_POSTGRES_HOST}}"
          SANDBOX_NAME: "${GITHUB_SHA}"
          SANDBOX_SUBDOMAIN: "${{secrets.DEV_SANDBOX_SUBDOMAIN}}"
          GCP_PROJECT: "${{secrets.DEV_GCP_PROJECT}}"
     
  sandbox-ready:
    needs: sandbox-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Wait for test sandbox to become available 
        # https://gist.github.com/rgl/f90ff293d56dbb0a1e0f7e7e89a81f42
        # Add a timeout
        run: timeout 900 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' https://${GITHUB_SHA:0:6}.cauldron.sefaria.org/texts)" != "200" ]]; do sleep 5; done'

  # make sure Cloudbuild runs without error
  
     
  pytest:
    runs-on: ubuntu-latest
    needs: sandbox-ready
    steps:
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DEV_CLOUDBUILD_SA_KEY }}
          project_id: ${{ secrets.DEV_PROJECT }}
      
      - name: Auth to target cluster
        run: gcloud container clusters get-credentials ${{secrets.DEV_GKE_CLUSTER}} --zone ${{secrets.DEV_GKE_REGION}} --project ${{secrets.DEV_GCP_PROJECT}}
          
      - run: kubectl exec $(kubectl get pod --selector=stackRole=django,deployEnv=4052196 -o jsonpath='{range .items[0]}{.metadata.name}{end}') -- py.test -m "not deep and not failing"


  selenium-sauce:
    # This can safely use ''
    runs-on: ubuntu-latest
    needs: sandbox-ready
    steps:
      # Deploy branch to cauldron
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with: 
          python-version: '3.7'    
      - run: pwd
      - run: ls -l
          
      # - run: pip3 install django==1.11.* structlog
      - run: pip3 install -r ./requirements.txt

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DEV_CLOUDBUILD_SA_KEY }}
          project_id: ${{ secrets.DEV_PROJECT }}

      - name: Auth to target cluster
        run: gcloud container clusters get-credentials ${{secrets.DEV_GKE_CLUSTER}} --zone ${{secrets.DEV_GKE_REGION}} --project ${{secrets.DEV_GCP_PROJECT}}

      # Open connection to mongo with kubectl 
      - run: 'kubectl port-forward svc/mongo 27017:27017 && sleep 20 &'

      - run: python3 ./reader/browsertest/zzRun_test.py
        env: 
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          PYTHONPATH: "."
          DJANGO_SETTINGS_MODULE: sefaria.settings
          SEFARIA_TEST_PASS: ${{ secrets.SEFARIA_APP_PASS }}
          SEFARIA_TEST_USER: ${{ secrets.SEFARIA_APP_USER }}
          SELENIUM_SERVER_URL: https://${{ secrets.SAUCE_USERNAME }}:${{ secrets.SAUCE_ACCESS_KEY }}@@ondemand.us-west-1.saucelabs.com:443/wd/hub

      # - run: python3 ./reader/browsertest/run_tests_on_travis.py 'Build -test'
      #   env: 
      #     SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
      #     SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
      #     PYTHONPATH: "."
      #     DJANGO_SETTINGS_MODULE: sefaria.settings


    
  # selenium-local:
  #   runs-on: ubuntu-latest
  #   needs: sandbox-ready
  #   service: ""
  #   steps:
  #     - 

  sandbox-destroy:
    runs-on: ubuntu-latest
    needs: sandbox-ready
    steps: 
      # Deploy branch to cauldron
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with: 
          python-version: '3.7'

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DEV_CLOUDBUILD_SA_KEY }}
          project_id: ${{ secrets.DEV_PROJECT }}

      - name: Delete sandbox after tests are finished
        run: ./build/ci/destroy-ci-sandbox.bash
        env:
          GKE_CLUSTER: "${{secrets.DEV_GKE_CLUSTER}}"
          SANDBOX_NAME: $GITHUB_SHA"
          GCP_PROJECT: "${{secrets.DEV_GCP_PROJECT}}"
          GKE_REGION: "${{secrets.DEV_GKE_REGION}}"
          SANDBOX_SUBDOMAIN: "${{secrets.DEV_SANDBOX_SUBDOMAIN}}"
          GKE_NAMESPACE: "${{secrets.DEV_SANDBOX_NAMESPACE}}"
...
